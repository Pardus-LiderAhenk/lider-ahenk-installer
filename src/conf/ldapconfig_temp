#!/bin/bash

CNAME="#CNAME"
BASEDN="#BASEDN"
BASECN="#BASECN"
ORGANIZATION="#ORGANIZATION"

ADMINCN="#ADMINCN"
ADMINPASSWD="#ADMINPASSWD"
CNCONFIGADMINDN="#CNCONFIGADMINDN"
CNCONFIGADMINPASSWD="#CNCONFIGADMINPASSWD"
LIDERAHENK_SCHEMA_PATH="/tmp/liderahenk.ldif"
SUDO_SCHEMA_PATH="/tmp/sudo.ldif"

LIDERCONSOLEUSER="#LIDERCONSOLEUSER"
LIDERCONSOLEPWD="#LIDERCONSOLEPWD"
ADMINDN="$ADMINCN,$BASEDN"

## Groups on LDAP for LiderAhenk
GROUPDN="ou=Groups,$BASEDN"
USERDN="ou=Users,$BASEDN"
AGENTDN="ou=Agents,$BASEDN"
AGENTGROUPDN="ou=Agent,$GROUPDN"
USERGROUPDN="ou=User,$GROUPDN"
ADMINGROUPDN="cn=adminGroups,$USERGROUPDN"
ROLEGROUPDN="ou=Role,$GROUPDN"
POLICYGROUPDN="ou=Policies,$GROUPDN"
DEFAULTPOLICYDN="cn=Default Password Policy,$POLICYGROUPDN"

LIDER_SERVER_ADDR="#LIDER_SERVER_ADDR"
SIMPLELDAPUSER="test_ldap_user"
SIMPLELDAPUSERPWD="secret"
#ADMINPASSWDHASH=$(slappasswd -h {SSHA} -s $ADMINPASSWD)

DBPATH=/var/ldaps/$CNAME

LASTDBCOUNT=`ldapsearch -LLL -x -s sub -D "$CNCONFIGADMINDN" -w $CNCONFIGADMINPASSWD -b "cn=config" "(olcDatabase=*)" | egrep -o "dn: olcDatabase={([0-9]+)}mdb" | tac | egrep -o -m1 "[0-9]+"`
CURDBNO=`expr $LASTDBCOUNT + 1`

systemctl restart slapd.service

# password for cn=admin,cn=config
NEW_PASSWD=$(slappasswd -h {SSHA} -s $CNCONFIGADMINPASSWD)
echo $NEW_PASSWD

if [ -d "$DBPATH" ]; then
    echo "ERROR: Directory $DBPATH already exists!" 1>&2
    exit 0
fi

mkdir -p $DBPATH
chmod 755 $DBPATH
chown openldap:openldap $DBPATH

# Set password for cn=admin,cn=config
ldapmodify -Y EXTERNAL -H ldapi:/// << EOL
dn: olcDatabase={0}config,cn=config
changetype: modify
replace: olcRootPW
olcRootPW: $NEW_PASSWD

dn: cn=config
replace: olcAuthzRegexp
olcAuthzRegexp: {0}uid=([^,]*),cn=[^,]*,cn=auth  ldap:///$BASEDN??sub?(uid=\$1)
-
replace: olcSizeLimit
olcSizeLimit: 10000
EOL

# Policy modulu icin gerekli schemayi yukler
ldapadd -x -D "$CNCONFIGADMINDN" -f /etc/ldap/schema/ppolicy.ldif -w $CNCONFIGADMINPASSWD

# Varsayilan gerekli modulleri ayarlar
ldapmodify -Y EXTERNAL -H ldapi:/// << EOL
dn: cn=module{0},cn=config
changetype: modify
add: olcModuleLoad
olcModuleLoad: unique
olcModuleLoad: ppolicy
olcModuleLoad: memberof
EOL

#uid parametresini unique yapar. (unique modulu yuklu olmalidir.)
ldapadd -Y EXTERNAL -H ldapi:/// << EOL
dn: olcOverlay=unique,olcDatabase={$CURDBNO}mdb,cn=config
changetype: add
objectClass: olcUniqueConfig
objectClass: top
objectClass: olcConfig
objectClass: olcOverlayConfig
olcOverlay: unique
olcUniqueAttribute: uid

#memberof modulunu aktive eder, boylece bir groupOfNames e her member eklendiginde eklenen member'in memberof parametresi de otomatik ayarlanir.
dn: olcOverlay=memberof,olcDatabase={$CURDBNO}mdb,cn=config
objectClass: olcMemberOf
objectClass: top
objectClass: olcConfig
objectClass: olcOverlayConfig
olcOverlay: memberof

# ppolicy modulunu aktive edilir.
dn: olcOverlay={0}ppolicy,olcDatabase={1}mdb,cn=config
objectClass: olcOverlayConfig
objectClass: olcPPolicyConfig
olcOverlay: {0}ppolicy
olcPPolicyDefault: $DEFAULTPOLICYDN
olcPPolicyHashCleartext: FALSE
olcPPolicyUseLockout: FALSE
olcPPolicyForwardUpdates: FALSE
EOL

# add liderahenk.ldif file to ldap
ldapadd -x -D "$CNCONFIGADMINDN" -f $LIDERAHENK_SCHEMA_PATH -w $CNCONFIGADMINPASSWD

ldapadd -x -D "$CNCONFIGADMINDN" -f $SUDO_SCHEMA_PATH -w $CNCONFIGADMINPASSWD

ldapadd -x -D "$ADMINDN" -w $ADMINPASSWD << EOL
dn: cn=liderAhenkConfig,$BASEDN
changetype: add
objectClass: pardusLiderAhenkConfig
liderServiceAddress: http://$LIDER_SERVER_ADDR:8181
cn: liderAhenkConfig

dn: $USERDN
objectClass: organizationalUnit
objectClass: pardusLider
objectClass: top
ou: Users
description: Users

dn: $AGENTDN
objectClass: organizationalUnit
objectClass: pardusLider
objectClass: top
ou: Agents
description: pardusDeviceGroup

dn: $GROUPDN
objectClass: organizationalUnit
objectClass: pardusLider
objectClass: top
ou: Groups

dn: $USERGROUPDN
objectClass: organizationalUnit
objectClass: pardusLider
objectClass: top
ou: User
description: User groups

dn: $AGENTGROUPDN
objectClass: organizationalUnit
objectClass: pardusLider
objectClass: top
ou: Agent
description: Agent groups

dn: cn=$LIDERCONSOLEUSER,$USERDN
objectClass: inetOrgPerson
objectClass: organizationalPerson
objectClass: pardusAccount
objectClass: pardusLider
objectClass: person
objectClass: top
cn: $LIDERCONSOLEUSER
sn: $LIDERCONSOLEUSER
uid: $LIDERCONSOLEUSER
userPassword: $LIDERCONSOLEPWD
liderPrivilege: [REPORT:ALL]
liderPrivilege: [TASK:$BASEDN:ALL]
liderPrivilege: ROLE_ADMIN
liderPrivilege: ROLE_USER

dn: uid=$SIMPLELDAPUSER,$USERDN
objectClass: inetOrgPerson
objectClass: organizationalPerson
objectClass: pardusAccount
objectClass: pardusLider
objectClass: person
objectClass: posixAccount
objectClass: shadowAccount
objectClass: top
cn: $SIMPLELDAPUSER
sn: $SIMPLELDAPUSER
uid: $SIMPLELDAPUSER
uidNumber: 5000
gidNumber: 5000
homeDirectory: /home/$SIMPLELDAPUSER
userPassword: $SIMPLELDAPUSERPWD
loginShell: /bin/bash
description: example ldap user

dn: $ADMINGROUPDN
objectClass: groupOfNames
objectClass: top
member: $ADMINDN
member: cn=$LIDERCONSOLEUSER,$USERDN
cn: adminGroups
description: User group authorized to write on LDAP

dn: $ROLEGROUPDN
objectClass: organizationalUnit
objectClass: top
objectClass: pardusLider
ou: Role
description: group of roles

dn: cn=rol-1,$ROLEGROUPDN
objectClass: sudoRole
objectClass: top
cn: rol-1
sudoUser: test_ldap_user
sudoHost: ALL
sudoCommand: ALL

dn: $POLICYGROUPDN
objectClass: organizationalUnit
objectClass: pardusLider
objectClass: top
ou: Policies
description: group of policy

dn: $DEFAULTPOLICYDN
objectClass: person
objectClass: pwdPolicy
objectClass: top
cn: Default Password Policy
pwdAttribute: userPassword
sn: Default Password Policy
description: Default password policy
pwdAllowUserChange: TRUE
pwdCheckQuality: 0
pwdExpireWarning: 0
pwdFailureCountInterval: 0
pwdGraceAuthNLimit: 2
pwdInHistory: 3
pwdLockout: TRUE
pwdLockoutDuration: 300
pwdMaxAge: 30000
pwdMaxFailure: 3
pwdMinAge: 0
pwdMinLength: 4
pwdMustChange: TRUE
pwdSafeModify: FALSE
EOL

# User group with ldap write permission
ldapmodify -Y EXTERNAL -H ldapi:/// << EOL
dn: olcDatabase={1}mdb,cn=config
changetype: modify
add: olcAccess
olcAccess: {0}to attrs=userPassword,shadowLastChange by group.exact="$ADMINGROUPDN" write by anonymous auth by self write
olcAccess: {9}to dn.base="$BASEDN" by * read by * break
olcAccess: {10}to dn.base="$USERDN" by * read by * break
olcAccess: {11}to dn.base="$AGENTDN" by * read by * break
olcAccess: {12}to dn.base="$POLICYGROUPDN" by * read by * break
olcAccess: {13}to dn.base="$GROUPDN" by * read by * break
olcAccess: {14}to dn.base="$USERGROUPDN" by * read by * break
olcAccess: {15}to dn.base="$AGENTGROUPDN" by * read by * break
olcAccess: {16}to dn.base="$ROLEGROUPDN" by * read by * break
olcAccess: {17}to * by self write
olcAccess: {1}to dn.subtree="$ROLEGROUPDN" by dn.subtree="$AGENTDN" read by * break
olcAccess: {2}to dn.subtree="$USERDN" by dn.subtree="$AGENTDN" read by * break
olcAccess: {3}to dn.subtree="$USERDN" by group.exact="$ADMINGROUPDN" write by * break
olcAccess: {4}to dn.subtree="$AGENTDN" by group.exact="$ADMINGROUPDN" write by * break
olcAccess: {5}to dn.subtree="$POLICYGROUPDN" by group.exact="$ADMINGROUPDN" write by * break
olcAccess: {6}to dn.subtree="$USERGROUPDN" by group.exact="$ADMINGROUPDN" write by * break
olcAccess: {7}to dn.subtree="$ROLEGROUPDN" by group.exact="$ADMINGROUPDN" write by * break
olcAccess: {8}to dn.subtree="$AGENTGROUPDN" by group.exact="$ADMINGROUPDN" write by * break
EOL
systemctl restart slapd.service

file="/etc/ldap/slapd.d/cn=config/olcDatabase={1}mdb.ldif"
while read -r line; do
    name="$line"
#    echo "Name read from file - $name"
    if [[ "$name" == *"to * by * read"* ]]; then
        parser_line=$(echo "$name" | awk '{print $2}')
        parser_line=$(echo $parser_line | sed 's/}.*//')
        olc_number=$(echo "${parser_line:1}")
        echo "--------------------->>>> "$olc_number
    fi

    if [[ "$name" == *"to attrs=shadowLastChange by self write by * read"* ]]; then
        parser_line=$(echo "$name" | awk '{print $2}')
        parser_line=$(echo $parser_line | sed 's/}.*//')
        olc_number2=$(echo "${parser_line:1}")
        echo "--------------------->>>> "$olc_number2
    fi
done < $file

# delete "to * by * read" attribute from olcAccess
ldapmodify -Y EXTERNAL -H ldapi:/// << EOL
dn: olcDatabase={1}mdb,cn=config
changetype: modify
delete: olcAccess
olcAccess: {$olc_number}to * by * read
olcAccess: {$olc_number2}to attrs=shadowLastChange by self write by * read
EOL

systemctl restart slapd.service

